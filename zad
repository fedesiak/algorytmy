//bubblesort
#include <iostream>
#include <stdlib.h>
#include <time.h>
#include <fstream>
using namespace std;
//Tre   zadania: napisa  sortowanie b belkowe i wys anie posortowanej tablicy do pliku
int n = 20;
void bubblesort(int tab[], int n)
{
    int temp = 0;
    for (int k = 1; k <= n - 1; k++)
    {
        for (int i = 0; i < n - k; i++)
        {
            if (tab[i] > tab[i + 1])
            {
                temp = tab[i];
                tab[i] = tab[i + 1];
                tab[i + 1] = temp;
            }
        }
    }
}
int main()
{
    srand(time(NULL));
    int tab[n];
    cout << "Tablica przed sortowaniem: " << endl;

    for (int i = 0; i < n; i++)
    {
        tab[i] = 1 + (rand() % 100);
        cout << tab[i] << " ";
    }

    cout << endl
         << endl;

    bubblesort(tab, n);
    ofstream plik("wynik.txt");

    cout << "Tablica po sortowaniu: " << endl;

    for (int i = 0; i < n; i++)
    {
        cout << tab[i] << " ";
        plik << tab[i] << " ";
    }

    plik.close();
    return 0;
}
//
//
//
//
//
//
//
//selectionsort
#include <iostream>
#include <stdlib.h>
#include <time.h>
using namespace std;

void selectionsort(int tab[],int n)
{
    int temp;
    int min;
    for(int i=0;i<n;i++)
    {
        min = i;
        for(int j=i+1;j<n;j++)
        {
            if(tab[j] < tab[min])
            {
                min = j;
            }
        }
        temp = tab[i];
        tab[i] = tab[min];
        tab[min] = temp;
    }
}

using namespace std;

int main()
{
    int a,b;
    cout<<"Podaj ilość wierszy ";
    cin>>a;
    cout<<"Podaj ilość kolumn ";
    cin>>b;
    int tab[a][b];
    srand(time(NULL));
    for(int i=0;i<a;i++)
    {
        cout<<endl;
        for(int j=0;j<b;j++)
        {
            tab[i][j] = rand() % 90 + 10;
            cout<<tab[i][j]<<" ";
        }
    }
    cout<<endl;

    for(int i=0;i<a;i++)
    {
        selectionsort(tab[i],b);
    }


    for(int i=0;i<a;i++)
    {
        cout<<endl;
        for(int j=0;j<b;j++)
        {
            cout<<tab[i][j]<<" ";
        }
    }

    return 0;
}
//
//
//
//
//
//
//
//
//
//erastotenes
#include <iostream>

using namespace std;

void erastotenes(int n)
{
    int tab[n+1];
    for(int i= 0; i<n+1; i++)
    {
        tab[i] = 1;

    }
    for(int j =2; j*j<n+1; j++)
    {
        for(int k =j+1; k<n+1; k++)
        {
            if(k%j==0)
            {
                tab[k] = 0;
            }
        }

    }
    for(int l= 0; l<n+1; l++)
    {
        if(tab[l] == 1)
        {
            cout<<l<<" ";
        }
    }
}

int main()
{
    int a;
    cout<<"Podaj liczbe calkowita wieksza od 2: ";
    cin>>a;
    erastotenes(a);
    return 0;
}

//
//
//
//
//
//
//
//bin to hex

#include <iostream>

using namespace std;

void toBinary(int a, int p)
{
    int tab[32];
    int i=0;
    while(a!=0)
    {
        tab[i] = a%p;
        a = a/p;
        i++;
    }
    for(int j = i-1; j>=0; j--)
    {
        cout<<tab[j];
    }
}

void toHex(int a)
{
    int tab[32];
    int i=0;
    while(a!=0)
    {
        tab[i] = a%16;
        a = a/16;
        i++;
    }
    for(int j = i-1; j>=0; j--)
    {
        switch(tab[j]){
        case 10:
        cout<<"A";
        break;
        case 11:
        cout<<"B";
        break;
        case 12:
        cout<<"C";
        break;
        case 13:
        cout<<"D";
        break;
        case 14:
        cout<<"E";
        break;
        case 15:
        cout<<"F";
        break;
        default:
            cout<<tab[j];
        }



    }
}

int main()
{
    int number = 500;
    toHex(number);
}

